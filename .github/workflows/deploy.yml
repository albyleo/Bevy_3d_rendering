name: Rust WASM GitHub Pages

on:
  push:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-build-wasm-${{ hashFiles('**/Cargo.toml') }}

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: wasm32-unknown-unknown

    - name: Check and install wasm-bindgen-cli
      run: |
        if ! command -v wasm-bindgen &> /dev/null
        then
            echo "wasm-bindgen-cli not found, installing..."
            cargo install wasm-bindgen-cli
        else
            echo "wasm-bindgen-cli is already installed"
            wasm-bindgen --version
        fi

    - name: Fix Cargo.toml
      run: |
        sed -i 's/wasm-bindgen = "v\([0-9.]*\)"/wasm-bindgen = "\1"/' Cargo.toml

    - name: Build
      run: |
        cargo build --release --target wasm32-unknown-unknown
        wasm-bindgen --out-dir ./out --target web target/wasm32-unknown-unknown/release/bevy_3d_rendering.wasm

    - name: Prepare deployment
      run: |
        mkdir -p deploy/assets
        mkdir -p deploy/out
        cp index.html deploy/
        cp -r out/* deploy/out/
        cp -r assets/* deploy/assets/
        touch deploy/.nojekyll
        # Verifica del contenuto della directory deploy
        echo "Contenuto della directory deploy:"
        ls -R deploy

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./deploy

    - name: Verify deployment files
      run: |
        echo "Contents of deploy/assets directory:"
        ls -l deploy/assets
        echo "Size of ANGEL-FRANK1_converted.glb:"
        ls -lh deploy/assets/ANGEL-FRANK1_converted.glb
        echo "First few bytes of ANGEL-FRANK1_converted.glb:"
        head -c 20 deploy/assets/ANGEL-FRANK1_converted.glb | xxd

    # Aggiungi questo passo per debugging
    - name: Debug Information
      if: failure()
      run: |
        echo "Contenuto della directory di lavoro:"
        ls -R
        echo "Contenuto della directory deploy:"
        ls -R deploy